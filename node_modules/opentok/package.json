{
  "name": "opentok",
  "description": "OpenTok server-side SDK",
  "version": "2.2.0-alpha",
  "homepage": "http://opentok.github.io/opentok-node",
  "repository": {
    "type": "git",
    "url": "https://github.com/opentok/opentok-node.git"
  },
  "contributors": [
    {
      "name": "Brian Stoner",
      "email": "bsstoner@gmail.com",
      "url": "http://brianstoner.com"
    },
    {
      "name": "Song Zheng",
      "email": "song@tokbox.com",
      "url": "http://songz.me"
    },
    {
      "name": "Ankur Oberoi",
      "email": "aoberoi@gmail.com",
      "url": "http://aoberoi.me"
    }
  ],
  "main": "lib/opentok.js",
  "scripts": {
    "test": "grunt"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "devDependencies": {
    "grunt": "^0.4.4",
    "grunt-mocha-test": "^0.10.0",
    "chai": "^1.9.1",
    "nock": "^0.27.2",
    "async": "^0.2.10",
    "grunt-jasmine-node": "^0.2.1"
  },
  "dependencies": {
    "xmljson": "~0.2.0",
    "underscore": "~1.5.2",
    "request": "^2.34.0",
    "lodash": "^2.4.1"
  },
  "readme": "# OpenTok Node SDK\r\n\r\n**TODO**: got to change this to master branch instead of cleaning-up\r\n\r\n[![Build Status](https://travis-ci.org/opentok/opentok-node.png?branch=cleaning-up)](https://travis-ci.org/opentok/opentok-node)\r\n\r\nThe OpenTok Ruby SDK lets you generate\r\n[sessions](http://tokbox.com/opentok/tutorials/create-session/) and\r\n[tokens](http://tokbox.com/opentok/tutorials/create-token/) for [OpenTok](http://www.tokbox.com/)\r\napplications. This version of the SDK also includes support for working with OpenTok 2.0 archives.\r\n\r\n# Installation\r\n\r\n## npm (recommended):\r\n\r\nnpm helps manage dependencies for node projects. Find more info here: <http://npmjs.org>\r\n\r\nRun this command to install the package and adding it to your `package.json`:\r\n\r\n```\r\n$ npm install opentok --save\r\n```\r\n\r\n## Manually:\r\n\r\n**TODO**: instructions on getting the shrinkwrapped tarball from GitHub Releases\r\n\r\n# Usage\r\n\r\n## Initializing\r\n\r\nImport the module to get a constructor function for an OpenTok object, then call it with `new` to\r\ninitantiate it with your own API Key and API Secret.\r\n\r\n```javascript\r\nvar OpenTok = require('opentok'),\r\n    opentok = new OpenTok(apiKey, apiSecret);\r\n```\r\n\r\n## Creating Sessions\r\n\r\nTo create an OpenTok Session, use the `opentok.createSession(properties, callback)` method. The \r\n`properties` parameter is an optional object used to specify whether you are creating a p2p Session\r\nand specifying a location hint. The callback has the signature `function(error, session)`. The \r\n`session` returned in the callback is an instance of Session. Session objects have a `sessionId`\r\nproperty that is useful to be saved to a persistent store (e.g. database).\r\n\r\n```javascript\r\n// Just a plain Session\r\nopentok.createSession(function(err, session) {\r\n  if (err) return console.log(err);\r\n\r\n  // save the sessionId\r\n  db.save('session', session.sessionId, done);\r\n});\r\n\r\n// A p2p Session\r\nopentok.createSession({p2p:true}, function(err, session) {\r\n  if (err) return console.log(err);\r\n\r\n  // save the sessionId\r\n  db.save('session', session.sessionId, done);\r\n});\r\n\r\n// A Session with a location hint\r\nopentok.createSession({location:'12.34.56.78'}, function(err, session) {\r\n  if (err) return console.log(err);\r\n\r\n  // save the sessionId\r\n  db.save('session', session.sessionId, done);\r\n});\r\n```\r\n## Generating Tokens\r\n\r\nOnce a Session is created, you can start generating Tokens for clients to use when connecting to it.\r\nYou can generate a token by calling the `opentok.generateToken(sessionId, options)` method. Another\r\nway is to call the `session.generateToken(options)` method of a Session object. The `options`\r\nparameter is an optional object used to set the role, expire time, and connection data of the Token.\r\n\r\n```javascript\r\n// Generate a Token from just a sessionId (fetched from a database)\r\ntoken = opentok.generateToken(sessionId);\r\n\r\n// Genrate a Token from a session object (returned from createSession)\r\ntoken = session.generateToken();\r\n\r\n// Set some options in a Token\r\ntoken = session.generateToken({\r\n  role :       'moderator',\r\n  expireTime : (new Date().getTime() / 1000)+(7 * 24 * 60 * 60), // in one week\r\n  data :       'name=Johnny'\r\n});\r\n```\r\n\r\n## Working with archives\r\n\r\nYou can start the recording of an OpenTok Session using the `opentok.startArchive(sessionId,\r\noptions, callback)` method. The `options` parameter is an optional object used to set the name of\r\nthe Archive. The callback has the signature `function(err, archive)`. The `archive` returned in\r\nthe callback is an instance of `Archive`. Note that you can only start an archive on a Session with\r\nconnected clients.\r\n\r\n```javascript\r\nopentok.startArchive(sessionId, { name: 'Important Presentation' }, function(err, archive) {\r\n  if (err) return console.log(err);\r\n\r\n  // The id property is useful to save off into a database\r\n  console.log(\"new archive:\" + archive.id);\r\n});\r\n```\r\n\r\nYou can stop the recording of a started Archive using the `opentok.stopArchive(archiveId, callback)`\r\nmethod. You can also do this using the `archive.stop(callback)` method an `Archive` instance. The\r\ncallback has a signature `function(err, archive)`. The `archive` returned in the callback is an\r\ninstance of `Archive`.\r\n\r\n```javascript\r\nopentok.stopArchive(archiveId, function(err, archive) {\r\n  if (err) return console.log(err);\r\n\r\n  console.log(\"Stopped archive:\" + archive.id);\r\n});\r\n\r\narchive.stop(function(err, archive) {\r\n  if (err) return console.log(err);\r\n});\r\n```\r\n\r\nTo get an `Archive` instance (and all the information about it) from an `archiveId`, use the \r\n`opentok.getArchive(archiveId, callback)` method. The callback has a function signature \r\n`function(err, archive)`. You can inspect the properties of the archive for more details.\r\n\r\n```javascript\r\nopentok.getArchive(archiveId, function(err, archive) {\r\n  if (err) return console.log(err);\r\n\r\n  console.log(archive);\r\n});\r\n```\r\n\r\nTo delete an Archive, you can call the `opentok.deleteArchive(archiveId, callback)` method or the \r\n`delete(callback)` method of an `Archive` instance. The callback has a signature `function(err)`.\r\n\r\n```javascript\r\n// Delete an Archive from an archiveId (fetched from database)\r\nopentok.deleteArchive(archiveId, function(err) {\r\n  if (err) console.log(err);\r\n});\r\n\r\n// Delete an Archive from an Archive instance (returned from archives.create, archives.find)\r\narchive.delete(function(err) {\r\n  if (err) console.log(err);\r\n});\r\n```\r\n\r\nYou can also get a list of all the Archives you've created (up to 1000) with your API Key. This is\r\ndone using the `opentok.listArchives(options, callback)` method. The parameter `options` is an\r\noptional object used to specify an `offset` and `count` to help you paginate through the results.\r\nThe callback has a signature `function(err, archives, totalCount)`. The `archives` returned from\r\nthe callback is an array of `Archive` instances. The `totalCount` returned from the callback is\r\nthe total number of archives your API Key has generated.\r\n\r\n```javascript\r\nopentok.listArchives({offset:100, count:50}, function(error, archives, totalCount) {\r\n  if (error) return console.log(\"error:\", error);\r\n\r\n  console.log(totalCount + \" archives\");\r\n  for (var i = 0; i < archives.length; i++) {\r\n    console.log(archives[i].id);\r\n  }\r\n});\r\n```\r\n# Documentation\r\n\r\n**TODO**: Reference documentation is available at <http://opentok.github.io/opentok-node/>\r\n\r\n# Requirements\r\n\r\nYou need an OpenTok API key and API secret, which you can obtain at <https://dashboard.tokbox.com>.\r\n\r\nThe OpenTok Node SDK requires node 0.10 or higher.\r\n\r\n# Release Notes\r\n\r\n**TODO**: See the [Releases](https://github.com/opentok/opentok-php-sdk/releases) page for details \r\nabout each release.\r\n\r\n## Important changes in v2.0\r\n\r\nThis version of the SDK includes support for working with OpenTok 2.0 archives. (This API does not\r\nwork with OpenTok 1.0 archives.)\r\n\r\n# Development and Contributing\r\n\r\nInterested in contributing? We <3 pull requests! File a new\r\n[Issue](https://github.com/opentok/opentok-node/issues) or take a look at the existing ones. If\r\nyou are going to send us a pull request, please try to run the test suite first and also include\r\ntests for your changes.\r\n\r\n# Support\r\n\r\nSee <http://tokbox.com/opentok/support/> for all our support options.\r\n\r\nFind a bug? File it on the [Issues](https://github.com/opentok/opentok-node/issues) page. Hint:\r\ntest cases are really helpful!\r\n\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/opentok/opentok-node/issues"
  },
  "_id": "opentok@2.2.0-alpha",
  "dist": {
    "shasum": "653cb11276091d0352ef7d8cbb8530ca9b3e3b3c"
  },
  "_resolved": "git://github.com/opentok/opentok-node#9a5b5e1941ed0a509aecc77cce7f0ef3cf15a031",
  "_from": "git://github.com/opentok/opentok-node#cleaning-up",
  "_fromGithub": true
}
